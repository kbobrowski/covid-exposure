{"version":3,"sources":["shared/functions/smoothScrollTop.js","shared/components/PropsRoute.js","shared/components/NavigationDrawer.js","checked-dks.proto.js","shared/components/HelpIcon.js","shared/components/Bordered.js","shared/components/ButtonCircularProgress.js","logged_in/components/dashboard/CountrySettings.tsx","logged_in/components/dashboard/SettingsArea.js","logged_in/components/dashboard/StatisticsArea.js","download/dkdemo.ts","logged_in/components/utils.ts","logged_in/components/dashboard/ProvideDiagnosisKeysArea.tsx","logged_in/components/dashboard/ProvideBluetoothDataArea.js","logged_in/components/dashboard/FindMatchesArea.js","logged_in/components/dashboard/Dashboard.tsx","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/components/Main.tsx"],"names":["globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","withStyles","theme","closeIcon","marginRight","spacing","headSection","width","blackList","backgroundColor","palette","common","black","height","noDecoration","textDecoration","withTheme","props","open","onClose","anchor","classes","menuItems","selectedItem","useEffect","onresize","isWidthUp","variant","className","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","color","map","element","link","key","name","to","button","selected","disableRipple","disableTouchRipple","icon","primary","href","CheckedDKs","exports","read","pbf","end","readFields","_readField","checkedDKs","tag","obj","push","readString","write","i","length","writeStringField","tooltipTypo","whiteSpace","typography","caption","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","useState","isHovered","setIsHovered","onMouseOver","useCallback","onMouseLeave","Tooltip","Typography","enterTouchDelay","onFocus","onBlur","cursor","wrapper","border","borderWidth","borderColor","greyed","disableVerticalPadding","disableBorderRadius","children","paddingLeft","paddingRight","borderRadius","shape","circularProgress","secondary","main","size","Box","pl","display","CircularProgress","thickness","numberInput","breakpoints","down","numberInputInput","padding","listItem","up","AccordionDetails","dBlock","pushMessageToSnackbar","useContext","DashboardContext","downloadCountries","cachingEnabled","numberWebWorkers","dispatch","expanded","setExpanded","expandedConfig","setExpandedConfig","removing","setRemoving","emptyHelp","text","help","setHelp","inputsConfig","secondaryAction","Select","value","toString","input","OutlinedInput","onChange","event","target","type","payload","parseInt","labelWidth","Array","from","keys","MenuItem","Checkbox","checked","helpText","Button","disabled","axios","delete","then","response","catch","error","finally","inputs","country","index","enabled","countryName","Dialog","fullScreen","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","Accordion","expandedArg","AccordionSummary","expandIcon","List","disablePadding","ListItem","divider","ListItemText","ListItemSecondaryAction","FormControl","SettingsArea","CardChart","data","inputExpanded","setInputExpanded","newMatchExpanded","setNewMatchExpanded","dks","rpis","matches","Grid","container","item","xs","md","light","valueDescription","singleMatch","timestamps","entry","timestamp","minDate","format","Date","maxDate","dark","dkdemo","a","get","responseType","readDkZip","currentTime","Math","round","getTime","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","spin","animation","listItemSecondaryAction","processDksUpload","updateDks","pushMessageToMessages","inputFile","useRef","hostLoading","setHostLoading","remoteLoading","setRemoteLoading","experimental","emptyDialogData","messages","errorDialogData","setErrorDialogData","handleDownload","prefix","setLoading","filter","Promise","all","dkDownloadResults","summaryMessages","totalErrorCount","totalNumberOfDKs","forEach","dkDownloadResult","errorCount","date","result","flat","Paper","ref","reader","FileReader","onload","readAsArrayBuffer","files","Toolbar","current","click","console","log","processRpisUpload","message","processMatchingConfig","loading","Dashboard","selectDashboard","statistics","mt","gutterBottom","margin","marginTop","marginBottom","memo","targets","setTargets","path","MessageListItem","ListItemAvatar","formatDistance","tabContainer","overflowY","maxHeight","popoverPaper","maxWidth","noShadow","boxShadow","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","IconButton","buttonRef","aria-describedby","Popover","disableScrollLock","anchorOrigin","vertical","horizontal","transformOrigin","AppBar","position","pt","pb","pr","Divider","dense","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","overflowX","smBordered","menuLink","iconListItem","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","openMobileDrawer","closeMobileDrawer","desktop","mobile","alignItems","Hidden","smUp","mr","xsDown","Drawer","node","placement","ListItemIcon","NavigationDrawer","root","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","handleClose","_","reason","pushMessage","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","withRouter","history","location","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setStatistics","setPushMessageToSnackbar","diagnosisKeys","rpiDbEntries","checkedDks","Set","useCaching","matchingInputData","setMatchingInputData","emptyResultDialog","content","resultDialog","setResultDialog","config","state","computeOutput","request","updateRpis","updateMatches","cacheLoadedCallback","configToPost","post","JSON","stringify","Pbf","pathname","statisticsEntryFromMap","newDkStatistic","sort","b","timestampToRssiList","timestampToRssi","Map","rpiDetails","rpi","set","rssi","prevState","timestampToCount","count","dk","rollingStart","Component","default","ConsecutiveSnackbarMessages","classNames","readRpis","readRpiProtoDb"],"mappings":"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","file":"static/js/7.1d01e552.chunk.js","sourcesContent":["/**\n * When called scrolls smooth to the top of the page.\n * globLastC prevents shaky animations when scrolling to\n * bottom while topscrolling.\n */\nlet globLastC = Infinity;\n\nfunction smoothScrollTopRec() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0 && globLastC > c) {\n    globLastC = c;\n    window.requestAnimationFrame(smoothScrollTopRec);\n    window.scrollTo(0, c - c / 8);\n  } else {\n    globLastC = Infinity;\n  }\n}\n\nfunction smoothScrollTop() {\n  /**\n   * Normally this gets called from componentDidMount()\n   * Not waiting a tiny fraction of time can lead\n   * to shaky behaviour\n   */\n  setTimeout(() => {\n    smoothScrollTopRec();\n  }, 10);\n}\n\nexport default smoothScrollTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar, Button\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          if (element.href) {\n            return (\n              <a href={element.href}>\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </a>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n","'use strict'; // code generated by pbf v3.2.1\n\n// CheckedDKs ========================================\n\nvar CheckedDKs = exports.CheckedDKs = {};\n\nCheckedDKs.read = function (pbf, end) {\n    return pbf.readFields(CheckedDKs._readField, {checkedDKs: []}, end);\n};\nCheckedDKs._readField = function (tag, obj, pbf) {\n    if (tag === 1) obj.checkedDKs.push(pbf.readString());\n};\nCheckedDKs.write = function (obj, pbf) {\n    if (obj.checkedDKs) for (var i = 0; i < obj.checkedDKs.length; i++) pbf.writeStringField(1, obj.checkedDKs[i]);\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\n\nconst styles = theme => ({\n  tooltipTypo: {\n    whiteSpace: \"pre-line !important\",\n    ...theme.typography.caption,\n    color: theme.palette.common.white\n  },\n  tooltip: {\n    verticalAlign: \"middle\",\n    fontSize: \"1.25rem\"\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    \"@media (max-width: 350px)\": {\n      marginLeft: theme.spacing(0.5)\n    },\n    transition: theme.transitions.create([\"color\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  }\n});\n\nfunction HelpIcon(props) {\n  const { classes, title } = props;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseLeave = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  return (\n    <Tooltip\n      title={\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\n          {title}\n        </Typography>\n      }\n      className={classes.tooltip}\n      enterTouchDelay={300}\n    >\n      <HelpIconOutline\n        /**\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n         * */\n        onMouseOver={onMouseOver}\n        onFocus={onMouseOver}\n        onBlur={onMouseLeave}\n        onMouseLeave={onMouseLeave}\n        color={isHovered ? \"primary\" : \"inherit\"}\n        className={classes.helpIcon}\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\n      />\n    </Tooltip>\n  );\n}\n\nHelpIcon.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  wrapper: {\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\n  },\n  greyed: {\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\n  }\n});\n\nfunction Bordered(props) {\n  const {\n    classes,\n    theme,\n    disableVerticalPadding,\n    disableBorderRadius,\n    children,\n    variant\n  } = props;\n  return (\n    <div\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\n      style={{\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nBordered.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  disableVerticalPadding: PropTypes.bool,\n  disableBorderRadius: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n    PropTypes.array\n  ]),\n  variant: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(Bordered);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  circularProgress: {\n    color: theme.palette.secondary.main\n  }\n});\n\nfunction ButtonCircularProgress(props) {\n  const { size, classes } = props;\n  return (\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\n      <CircularProgress\n        size={size ? size : 24}\n        thickness={size ? (size / 5) * 24 : 5}\n        className={classes.circularProgress}\n      />\n    </Box>\n  );\n}\n\nButtonCircularProgress.propTypes = {\n  size: PropTypes.number,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\n","import React, {useState, useContext} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  withStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport {DashboardContext} from \"../../../reducer/reducer\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport axios from 'axios';\n\nconst styles = (theme: any) => ({\n  numberInput: {\n    width: 120,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 80,\n    },\n    \"@media (max-width: 350px)\": {\n      width: 65,\n    },\n  },\n  numberInputInput: {\n    padding: \"9px 14.5px\",\n    \"@media (max-width: 380px)\": {\n      padding: \"9px 8.5px\",\n    },\n    \"@media (max-width: 350px)\": {\n      padding: \"9px 6.5px\",\n    },\n  },\n  listItem: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(4),\n    },\n    paddingLeft: 100,\n  },\n  AccordionDetails: {\n    paddingTop: theme.spacing(0),\n    justifyContent: \"flex-end\",\n  },\n  dBlock: {\n    display: \"block\",\n  },\n});\n\nfunction CountrySettings(props: any) {\n  const { pushMessageToSnackbar, classes }: {\n    pushMessageToSnackbar: any,\n    classes: any\n  } = props;\n  const {downloadCountries, cachingEnabled, numberWebWorkers, dispatch} = useContext(DashboardContext);\n  const [expanded, setExpanded] = useState<boolean>(true)\n  const [expandedConfig, setExpandedConfig] = useState<boolean>(false)\n  const [removing, setRemoving] = useState<boolean>(false)\n\n  const emptyHelp = {\n    open: false,\n    title: \"\",\n    text: <div>empty</div>\n  }\n  const [help, setHelp] = useState<{open: boolean; title: string, text: JSX.Element}>(emptyHelp)\n\n  const inputsConfig = [\n    {\n      title: \"Number of workers\",\n      secondaryAction: (\n        <Select\n          value={numberWebWorkers.toString()}\n          input={\n            <OutlinedInput\n              onChange={event => {\n                const {value} = event.target;\n                dispatch && dispatch({type: \"setNumberWebWorkers\", payload: parseInt(value)})\n              }}\n              labelWidth={0}\n              className={classes.numberInput}\n              classes={{ input: classes.numberInputInput }}\n              name=\"number-of-workers\"\n            />\n          }\n        >\n          {Array.from(Array(8).keys()).map(value => value+1).map(value => (\n            <MenuItem value={value.toString()}>{value.toString()}</MenuItem>\n          ))}\n        </Select>\n      )\n    },\n    {\n      title: \"Store Diagnosis Keys with no match and skip them next time\",\n      secondaryAction: (\n        <Checkbox\n          value=\"Caching enabled\"\n          color=\"primary\"\n          checked={cachingEnabled}\n          onChange={(event: any) => {\n            if (dispatch) {\n              dispatch({\n                type: \"setCachingEnabled\",\n                payload: event.target.checked\n              })\n            }\n          }}\n        />\n      ),\n      helpText: \"Do not match Diagnosis Keys which led to no match in previous runs. Available only in hosted mode.\"\n    },\n    {\n      title: \"Remove stored Diagnosis Keys\",\n      secondaryAction: (\n        <Button variant=\"contained\" color=\"primary\" disabled={removing} onClick={() => {\n          setRemoving(true)\n          axios.delete(\"/checked\")\n            .then(response => {\n              pushMessageToSnackbar({\n                text: \"Checked Diagnosis Keys removed\"\n              })\n            })\n            .catch(error => {\n              pushMessageToSnackbar({\n                text: \"Error removing checked Diagnosis Keys: \" + error\n              })\n            })\n            .finally(() => setTimeout(() => setRemoving(false), 1000))\n        }}>\n          Remove {removing && (<ButtonCircularProgress/>)}\n        </Button>\n      ),\n      helpText: \"Remove stored Diagnosis Keys which led to no match in previous runs. Available only in hosted mode.\"\n    }\n  ]\n\n  const inputs = downloadCountries.map((country, index) => ({\n    title: country.name,\n    secondaryAction: (\n      <Checkbox\n        key={index}\n        value={country.name}\n        color=\"primary\"\n        checked={country.enabled}\n        onChange={(event: any) => {\n          if (dispatch) {\n            dispatch({\n              type: \"setCountryEnabledState\",\n              payload: {\n                countryName: country.name,\n                enabled: event.target.checked\n              }\n            })\n          }\n        }}\n      />\n    )\n  }))\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={false}\n        open={help.open}\n        onClose={() => setHelp(emptyHelp)}\n        aria-labelledby=\"help\"\n      >\n        <DialogTitle id=\"help\">{help.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {help.text}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setHelp(emptyHelp)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Accordion expanded={expanded} onChange={(event: any, expandedArg: boolean) => setExpanded(expandedArg)}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Countries</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dBlock}>\n          <List disablePadding>\n            <Bordered disableVerticalPadding disableBorderRadius>\n              {inputs.map((element: any, index) => (\n                <ListItem\n                  key={index}\n                  divider={index !== inputs.length - 1}\n                  className=\"listItemLeftPadding\"\n                >\n                  <ListItemText>\n                    <Typography variant=\"body2\">\n                      {element.title}\n                      {element.helpText && <HelpIcon title={element.helpText} />}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    <FormControl variant=\"outlined\">\n                      {element.secondaryAction}\n                    </FormControl>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </Bordered>\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion expanded={expandedConfig} onChange={(event: any, expandedArg: boolean) => setExpandedConfig(expandedArg)}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Configuration</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dBlock}>\n          <List disablePadding>\n            <Bordered disableVerticalPadding disableBorderRadius>\n              {inputsConfig.map((element: any, index) => (\n                <ListItem\n                  key={index}\n                  divider={index !== inputs.length - 1}\n                  className=\"listItemLeftPadding\"\n                >\n                  <ListItemText>\n                    <Typography variant=\"body2\">\n                      {element.title}\n                      {element.helpText && (<span onClick={() => setHelp({\n                        open: true,\n                        title: `Help on \"${element.title}\"`,\n                        text: (<p>\n                          {element.helpText}\n                        </p>)\n                      })}><HelpIcon title=\"show help\" /></span>)}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    <FormControl variant=\"outlined\">\n                      {element.secondaryAction}\n                    </FormControl>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </Bordered>\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n);\n}\n\nCountrySettings.propTypes = {\n  classes: PropTypes.object,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CountrySettings);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CountrySettings from \"./CountrySettings\";\n\nfunction SettingsArea(props) {\n  const { pushMessageToSnackbar } = props;\n  return (\n    <Fragment>\n      <CountrySettings\n        pushMessageToSnackbar={pushMessageToSnackbar}\n      />\n    </Fragment>\n  );\n}\n\nSettingsArea.propTypes = {\n  pushMessageToSnackbar: PropTypes.func\n};\n\nexport default SettingsArea;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {AccordionDetails, AccordionSummary, Grid, Typography, withStyles} from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport format from \"date-fns/format\";\n\nconst styles = () => ({\n  dBlock: {\n    display: \"block\",\n  }\n});\n\nfunction StatisticsArea(props) {\n  const { theme, classes, CardChart, data } = props;\n  const [inputExpanded, setInputExpanded] = useState(false);\n  const [newMatchExpanded, setNewMatchExpanded] = useState(false);\n\n  useEffect(() => {\n    if (data.dks.length > 0 || data.rpis.length > 0) {\n      setInputExpanded(true);\n      if (data.matches.length > 0) {\n        setNewMatchExpanded(true);\n      }\n    }\n  }, [data])\n\n  return (\n    <div>\n      <Accordion expanded={inputExpanded} onChange={(event, expandedArg) => setInputExpanded(expandedArg)}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Input data</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dBlock}>\n          {CardChart && (\n            <Grid container spacing={3}>\n              {data.dks.length > 0 && (<Grid item xs={12} md={6}>\n                <CardChart\n                  data={data.dks}\n                  color={theme.palette.secondary.light}\n                  valueDescription=\"count: \"\n                  height=\"160px\"\n                  title=\"Diagnosis Keys (record count per day)\"\n                />\n              </Grid>)}\n              {data.rpis.length > 0 && (<Grid item xs={12} md={6}>\n                <CardChart\n                  data={data.rpis}\n                  color={theme.palette.primary.light}\n                  valueDescription=\"count: \"\n                  height=\"160px\"\n                  title=\"Bluetooth data (record count per day)\"\n                />\n              </Grid>)}\n            </Grid>\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion expanded={newMatchExpanded} onChange={(event, expandedArg) => setNewMatchExpanded(expandedArg)}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>Encounters data</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dBlock}>\n          {CardChart && (\n            <Grid container spacing={3}>\n              {data.matches.map((singleMatch, index) => {\n                const timestamps = singleMatch.map(entry => entry.timestamp)\n                const minDate = format(new Date(timestamps[0] * 1000), \"MMMM d, p\");\n                const maxDate = format(new Date(timestamps[timestamps.length - 1] * 1000), \"MMMM d, p\");\n                return (\n                  <Grid item xs={12} md={12} key={index}>\n                    <CardChart\n                      data={singleMatch}\n                      color={theme.palette.primary.dark}\n                      height=\"160px\"\n                      valueDescription=\"RSSI: \"\n                      title={`Between ${minDate} and ${maxDate}`}\n                    />\n                  </Grid>\n                )\n              })}\n            </Grid>\n          )}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nStatisticsArea.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  CardChart: PropTypes.elementType,\n  pushMessageToSnackbar: PropTypes.func,\n  pushMessageToMessages: PropTypes.func\n};\n\nexport default withStyles(styles, {withTheme: true})(StatisticsArea);\n","import axios from 'axios'\nimport {readDkZip} from \"../matcher/read-bins\";\nimport {DiagnosisKey} from \"../matcher/types\";\n\nexport const dkdemo = async (): Promise<DiagnosisKey[]> => {\n  const response = await axios.get(\"/demo-dks.zip\", {responseType: \"arraybuffer\"})\n  return readDkZip(response.data, false)\n}\n\n","export const currentTime = () => Math.round(new Date().getTime() / 1000)\n\n","import React, {useContext, useRef, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Paper,\n  Toolbar,\n  withStyles, Grid\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {dkdemo} from \"../../../download/dkdemo\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {MessageType} from \"../types\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport {DiagnosisKey} from \"../../../matcher/types\";\nimport {currentTime} from \"../utils\";\nimport {DashboardContext} from \"../../../reducer/reducer\";\n\nconst styles = (theme: any) => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2)\n  },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction ProvideDiagnosisKeysArea(props: any) {\n  const { classes, processDksUpload, updateDks, pushMessageToMessages, pushMessageToSnackbar }: {\n    classes: any,\n    processDksUpload: any,\n    updateDks: (arg: DiagnosisKey[]) => void,\n    pushMessageToMessages: (arg: MessageType) => void\n    pushMessageToSnackbar: (arg: {text: string}) => void\n  } = props;\n  const inputFile = useRef(null);\n  const [hostLoading, setHostLoading] = useState<boolean>(false);\n  const [remoteLoading, setRemoteLoading] = useState<boolean>(false);\n  const {downloadCountries, experimental} = useContext(DashboardContext)\n\n  const emptyDialogData = {\n    open: false,\n    messages: []\n  }\n\n  const [errorDialogData, setErrorDialogData] = useState<{\n    open: boolean\n    messages: JSX.Element[]\n  }>(emptyDialogData);\n\n  const onChangeHandler = (event: any) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      // @ts-ignore\n      processDksUpload(event.target.result)\n    }\n    reader.readAsArrayBuffer(event.target.files[0]);\n  }\n\n  const handleDownload = (prefix: string, setLoading: (arg: boolean) => void) => {\n    if (downloadCountries.filter(country => country.enabled).length === 0) {\n      pushMessageToSnackbar({\n        text: \"No countries selected\"\n      })\n      return\n    }\n    setLoading(true)\n    Promise.all(downloadCountries\n        .filter(country => country.enabled)\n        .map(country => country.get(prefix)))\n      .then(dkDownloadResults => {\n        const summaryMessages: JSX.Element[] = []\n        let totalErrorCount = 0\n        let totalNumberOfDKs = 0\n        let key = 0;\n        dkDownloadResults.forEach(dkDownloadResult => {\n          totalErrorCount += dkDownloadResult.errorCount\n          totalNumberOfDKs += dkDownloadResult.dks.length\n          if (dkDownloadResult.errorCount > 0) {\n            summaryMessages.push(<p key={key}>\n              {dkDownloadResult.errorCount} errors in download from {dkDownloadResult.countryName}.\n            </p>)\n            key += 1\n          }\n        })\n        if (summaryMessages.length > 0) {\n          setErrorDialogData({\n            open: true,\n            messages: summaryMessages\n          })\n          pushMessageToMessages({\n            text: `${totalErrorCount} errors downloading Diagnosis Keys`,\n            date: currentTime(),\n            error: true\n          })\n        }\n        if (totalNumberOfDKs > 0) {\n          pushMessageToMessages({\n            text: `${totalNumberOfDKs} Diagnosis Keys downloaded`,\n            date: currentTime(),\n            error: false\n          })\n        }\n        pushMessageToSnackbar({\n          text: `${totalNumberOfDKs} Diagnosis Keys downloaded`\n        })\n        updateDks(dkDownloadResults.map(result => result.dks).flat())\n      })\n      .finally(() => setTimeout(() => setLoading(false), 1000))\n  }\n\n  const handleDemo = () => {\n    dkdemo().then(dks => {\n      updateDks(dks)\n      pushMessageToMessages({\n        text: `${dks.length} demo Diagnosis Keys loaded`,\n        date: currentTime(),\n        error: false\n      })\n      pushMessageToSnackbar({\n        text: `${dks.length} demo Diagnosis Keys loaded`\n      })\n    })\n      .catch(error => console.log(\"ERROR DOWNLOADING DEMO: \" + error))\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <Dialog\n        fullScreen={false}\n        open={errorDialogData.open}\n        onClose={() => setErrorDialogData(emptyDialogData)}\n        aria-labelledby=\"errors\"\n      >\n        <DialogTitle id=\"errors\">Error summary</DialogTitle>\n        <DialogContent>\n          {errorDialogData.messages}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setErrorDialogData(emptyDialogData)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <input type='file' id='file' ref={inputFile} onChange={onChangeHandler} style={{display: 'none'}}/>\n      <Toolbar className={classes.toolbar}>\n        <Grid container spacing={2}>\n          {experimental && (\n            <div>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={() => handleDownload(\"/proxy/\", setHostLoading)} disabled={hostLoading}>\n                  Host {hostLoading && <ButtonCircularProgress/>}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={() => handleDownload(\"\", setRemoteLoading)} disabled={remoteLoading}>\n                  Remote {remoteLoading && <ButtonCircularProgress/>}\n                </Button>\n              </Grid>\n            </div>\n          )}\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => {\n              // @ts-ignore\n              inputFile.current.click()\n            }}>\n              Open\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => handleDemo()}>\n              Demo\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nProvideDiagnosisKeysArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  processDksUpload: PropTypes.func.isRequired,\n  updateDks: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  pushMessageToMessages: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ProvideDiagnosisKeysArea);\n","import React, {useContext, useRef, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Paper,\n  Toolbar,\n  withStyles, Grid\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from 'axios'\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport {DashboardContext} from \"../../../reducer/reducer\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2)\n  },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction ProvideBluetoothDataArea(props) {\n  const { classes, processRpisUpload, pushMessageToSnackbar } = props;\n  const inputFile = useRef(null)\n  const [hostLoading, setHostLoading] = useState(false)\n  const {experimental} = useContext(DashboardContext)\n\n  const onChangeHandler = event => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      processRpisUpload(event.target.result)\n    }\n    reader.readAsArrayBuffer(event.target.files[0]);\n  }\n\n  const handleDemo = () => {\n    axios.get(\"/demo-db.bin\", {responseType: \"arraybuffer\"})\n      .then(response => {\n        processRpisUpload(response.data)\n      })\n  }\n\n  const handleRaspberry = () => {\n    setHostLoading(true)\n    axios.get(\"/get\", {responseType: \"arraybuffer\"})\n      .then(response => processRpisUpload(response.data))\n      .catch(error => pushMessageToSnackbar({\n        text: error.message\n      }))\n      .finally(() => setTimeout(() => setHostLoading(false), 1000))\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <input type='file' id='file' ref={inputFile} onChange={onChangeHandler} style={{display: 'none'}}/>\n      <Toolbar className={classes.toolbar}>\n        <Grid container spacing={2}>\n          {experimental && (\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={() => handleRaspberry()} disabled={hostLoading} >\n                Host {hostLoading && <ButtonCircularProgress />}\n              </Button>\n            </Grid>\n          )}\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => inputFile.current.click()}>\n              Open\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => handleDemo()}>\n              Demo\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nProvideBluetoothDataArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  processRpisUpload: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  pushMessageToMessages: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ProvideBluetoothDataArea);\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Paper,\n  Toolbar,\n  withStyles, Grid\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2)\n  },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction FindMatchesArea(props) {\n  const { classes, processMatchingConfig } = props;\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <Button color=\"primary\" variant=\"contained\" disabled={loading} onClick={() => {\n              setLoading(true)\n              processMatchingConfig(() => setLoading(false))\n            }}>\n              Start {loading && (<ButtonCircularProgress/>)}\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nFindMatchesArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  processMatchingConfig: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FindMatchesArea);\n","import React, {Fragment, useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Typography, Box} from \"@material-ui/core\";\nimport SettingsArea from \"./SettingsArea\";\nimport StatisticsArea from \"./StatisticsArea\";\nimport ProvideDiagnosisKeysArea from \"./ProvideDiagnosisKeysArea\";\nimport ProvideBluetoothDataArea from \"./ProvideBluetoothDataArea\";\nimport FindMatchesArea from \"./FindMatchesArea\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Statistics} from \"../types\";\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {DashboardContext} from \"../../../reducer/reducer\";\n\nfunction Dashboard(props: any) {\n  const {\n    selectDashboard,\n    CardChart,\n    statistics,\n    processDksUpload,\n    processRpisUpload,\n    processMatchingConfig,\n    updateDks,\n    pushMessageToSnackbar,\n    pushMessageToMessages\n  }: {\n    selectDashboard: any\n    CardChart: any\n    statistics: Statistics\n    processDksUpload: any\n    processRpisUpload: any\n    processMatchingConfig: any\n    updateDks: any\n    pushMessageToSnackbar: any\n    pushMessageToMessages: any\n  } = props;\n\n  useEffect(selectDashboard, [selectDashboard]);\n\n  const emptyHelp = {\n    open: false,\n    title: \"\",\n    text: <div>empty</div>\n  }\n\n  const [help, setHelp] = useState<{open: boolean; title: string, text: JSX.Element}>(emptyHelp)\n  const {experimental} = useContext(DashboardContext);\n\n  return (\n    <Fragment>\n      <Dialog\n        fullScreen={false}\n        open={help.open}\n        onClose={() => setHelp(emptyHelp)}\n        aria-labelledby=\"help\"\n      >\n        <DialogTitle id=\"help\">{help.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {help.text}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setHelp(emptyHelp)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {experimental && (\n        <div>\n          <Box mt={4}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Settings\n            </Typography>\n          </Box>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <SettingsArea\n                pushMessageToSnackbar={pushMessageToSnackbar} />\n            </Grid>\n          </Grid>\n        </div>\n      )}\n      <Box mt={4}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n        </Typography>\n      </Box>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Choose Diagnosis Keys source\n              <span onClick={() => setHelp({\n                open: true,\n                title: \"How to provide Diagnosis Keys?\",\n                text: (\n                  <div>\n                    {experimental && (\n                      <div>\n                        <p>\n                          <b>HOST</b> will download official Diagnosis Keys from selected countries using reverse proxy on the host\n                          you deployed this application on (see deployment guide here). This mode does not work on covidexposure.org.\n                        </p>\n                        <p>\n                          <b>REMOTE</b> will attempt to download Diagnosis Keys directly\n                          but you need to disable CORS in the browser (see <a href=\"https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome\">instructions</a>).\n                        </p>\n                      </div>\n                    )}\n                    <p>\n                      <b>OPEN</b> allows you to provide .zip file with Diagnosis Keys, see <a href=\"/demo-dks.zip\">example file</a>.\n                    </p>\n                    <p>\n                      <b>DEMO</b> loads example Diagnosis Keys.\n                    </p>\n                  </div>\n                )\n              })}><HelpIcon title={\"show help\"}/></span>\n            </Typography>\n          </Box>\n          <ProvideDiagnosisKeysArea\n            processDksUpload={processDksUpload}\n            pushMessageToSnackbar={pushMessageToSnackbar}\n            pushMessageToMessages={pushMessageToMessages}\n            updateDks={updateDks}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Choose Bluetooth data source\n              <span onClick={() => setHelp({\n                open: true,\n                title: \"How to provide Bluetooth data?\",\n                text: (\n                  <div>\n                    {experimental && (\n                      <p>\n                        <b>HOST</b> will download Bluetooth data scanned by Raspberry Pi.\n                      </p>\n                    )}\n                    <p>\n                      <b>OPEN</b> allows you to provide protobuf file with Bluetooth data. See <a href=\"/rpi.proto\">proto file</a> and <a href=\"/demo-db.bin\">example file</a>. Check the source code for decoding / encoding details.\n                    </p>\n                    <p>\n                      <b>DEMO</b> loads example Bluetooth data.\n                    </p>\n                  </div>\n                )\n              })}><HelpIcon title={\"show help\"}/></span>\n            </Typography>\n          </Box>\n          <ProvideBluetoothDataArea\n            processRpisUpload={processRpisUpload}\n            pushMessageToSnackbar={pushMessageToSnackbar}\n            pushMessageToMessages={pushMessageToMessages}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Find matches\n              <span onClick={() => setHelp({\n                open: true,\n                title: \"What will happen after starting matching?\",\n                text: (\n                  <div>\n                    <p>\n                      <b>START</b> will launch workers in your browser to find a match between\n                      provided Diagnosis Keys and Bluetooth data. For each Diagnosis Key a set of\n                      all generated beacon data is computed and matched against provided\n                      Bluetooth data. You will see the progress of each worker. The rest of the application\n                      will disappear temporarily to improve matching performance.\n                    </p>\n                  </div>\n                )\n              })}><HelpIcon title={\"show help\"}/></span>\n            </Typography>\n          </Box>\n          <FindMatchesArea processMatchingConfig={processMatchingConfig} />\n        </Grid>\n      </Grid>\n      <Box mt={4}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {statistics.matches.length + statistics.rpis.length + statistics.dks.length > 0 && (<div>Plots</div>)}\n        </Typography>\n      </Box>\n      <StatisticsArea CardChart={CardChart} data={statistics} pushMessageToMessages={pushMessageToMessages} pushMessageToSnackbar={pushMessageToSnackbar}/>\n    </Fragment>\n  );\n}\n\nDashboard.propTypes = {\n  CardChart: PropTypes.elementType,\n  statistics: PropTypes.object.isRequired,\n  processDksUpload: PropTypes.func.isRequired,\n  processRpisUpload: PropTypes.func.isRequired,\n  processMatchingConfig: PropTypes.func.isRequired,\n  toggleAccountActivation: PropTypes.func,\n  pushMessageToSnackbar: PropTypes.func,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTargets: PropTypes.func.isRequired,\n  selectDashboard: PropTypes.func.isRequired,\n  pushMessageToMessages: PropTypes.func.isRequired\n};\n\nexport default Dashboard;\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"90%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"82.5%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"70%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n});\n\nfunction Routing(props) {\n  const {\n    classes,\n    CardChart,\n    statistics,\n    processDksUpload,\n    processRpisUpload,\n    processMatchingConfig,\n    updateDks,\n    targets,\n    setTargets,\n    pushMessageToSnackbar,\n    selectDashboard,\n    pushMessageToMessages\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n          CardChart={CardChart}\n          statistics={statistics}\n          processDksUpload={processDksUpload}\n          processRpisUpload={processRpisUpload}\n          processMatchingConfig={processMatchingConfig}\n          updateDks={updateDks}\n          targets={targets}\n          setTargets={setTargets}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectDashboard={selectDashboard}\n          pushMessageToMessages={pushMessageToMessages}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setTargets: PropTypes.func.isRequired,\n  CardChart: PropTypes.elementType,\n  statistics: PropTypes.object.isRequired,\n  processDksUpload: PropTypes.func.isRequired,\n  processRpisUpload: PropTypes.func.isRequired,\n  processMatchingConfig: PropTypes.func.isRequired,\n  updateDks: PropTypes.func.isRequired,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectDashboard: PropTypes.func.isRequired,\n  pushMessageToMessages: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport formatDistance from \"date-fns/formatDistance\";\n\nfunction MessageListItem(props) {\n  const { message, divider } = props;\n\n  return (\n    <ListItem divider={divider}>\n      <ListItemAvatar>\n        {message.error && (\n          <ErrorIcon color=\"secondary\" />)}\n      </ListItemAvatar>\n      <ListItemText\n        primary={message.text}\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\n      />\n    </ListItem>\n  );\n}\n\nMessageListItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  divider: PropTypes.bool,\n};\n\nexport default MessageListItem;\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = (theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  divider: {\n    marginTop: -2,\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Events\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        disableScrollLock\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Events</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                No events yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  Hidden,\n  Tooltip,\n  Box,\n  withStyles,\n  withWidth,\n} from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\nimport MessagePopperButton from \"./MessagePopperButton\";\n\nconst styles = (theme) => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0,\n    },\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4),\n    },\n  },\n  accountAvatar: {\n    backgroundColor: theme.palette.secondary.main,\n    height: 24,\n    width: 24,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: theme.spacing(1.5),\n      marginRight: theme.spacing(1.5),\n    },\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: theme.palette.common.black,\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\",\n    },\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textPrimary: {\n    color: theme.palette.primary.main,\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n  brandText: {\n    fontFamily: \"'Roboto', cursive\",\n    fontWeight: 400,\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2),\n  },\n  justifyCenter: {\n    justifyContent: \"center\",\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nfunction NavBar(props) {\n  const { selectedTab, messages, classes } = props;\n  // Will be use to make website more accessible by screen readers\n  const links = useRef([]);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n  const menuItems = [\n    {\n      link: \"/covid-exposure/c/dashboard\",\n      name: \"Dashboard\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DashboardIcon\n            className={\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <DashboardIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/covid-exposure\",\n      name: \"Logout\",\n      icon: {\n        desktop: (\n          <PowerSettingsNewIcon className=\"text-white\" fontSize=\"small\" />\n        ),\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\n      },\n    },\n  ];\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden xsDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                COVID\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                exposure\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <MessagePopperButton messages={messages} />\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Hidden xsDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nNavBar.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nfunction ConsecutiveSnackbars(props) {\n  const { classes, getPushMessageFromChild } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n  const queue = useRef([]);\n\n  const processQueue = useCallback(() => {\n    if (queue.current.length > 0) {\n      setMessageInfo(queue.current.shift());\n      setIsOpen(true);\n    }\n  }, [setMessageInfo, setIsOpen, queue]);\n\n  const handleClose = useCallback((_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const pushMessage = useCallback(message => {\n    queue.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n    if (isOpen) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setIsOpen(false);\n    } else {\n      processQueue();\n    }\n  }, [queue, isOpen, setIsOpen, processQueue]);\n\n  useEffect(() => {\n    getPushMessageFromChild(pushMessage);\n  }, [getPushMessageFromChild, pushMessage]);\n\n  return (\n    <Snackbar\n      disableWindowBlurListener\n      key={messageInfo.key}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      onExited={processQueue}\n      ContentProps={{\n        classes: {\n          root: classes.root,\n        },\n      }}\n      message={\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\n      }\n    />\n  );\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  getPushMessageFromChild: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\n","import React, {memo, useCallback, useState, useEffect, Fragment, useContext} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {withStyles} from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\nimport {\n  ComputeComponentOutput,\n  DiagnosisKey, Match,\n  MatchingRequest,\n  RpiDbEntryType,\n} from \"../../matcher/types\";\nimport {MessageType, ResultDialogType, Statistics, StatisticsEntry} from \"./types\";\nimport {readDkZip, readRpiProtoDb} from \"../../matcher/read-bins\";\nimport {withRouter} from \"react-router\";\nimport {currentTime} from \"./utils\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {DashboardContext} from \"../../reducer/reducer\";\nimport axios from 'axios';\nimport Pbf from \"pbf\";\nimport {CheckedDKsType} from '../../matcher/types'\nimport {CheckedDKs} from '../../checked-dks.proto'\nimport {DashboardState} from \"../../reducer/types\";\n\nconst styles = (theme: any) => ({\n  main: {\n    marginLeft: theme.spacing(9),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0,\n    },\n  },\n});\n\nfunction Main(props: any) {\n  const { classes, history, location } = props;\n  const { messages, cachingEnabled, dispatch, downloadCountries, numberWebWorkers } = useContext(DashboardContext)\n  const [selectedTab, setSelectedTab] = useState<string | null>(null);\n  const [CardChart, setCardChart] = useState<any>(null);\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\n  const [statistics, setStatistics] = useState<Statistics>({ dks: [], rpis: [], matches: [] });\n  const [targets, setTargets] = useState<any>([]);\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState<any>(null);\n  const [matchingInputData, setMatchingInputData] = useState<MatchingRequest>({\n    diagnosisKeys: [],\n    rpiDbEntries: [],\n    checkedDks: new Set<string>(),\n    useCaching: cachingEnabled\n  });\n  const emptyResultDialog: ResultDialogType = {\n    open: false,\n    content: <div>empty</div>\n  }\n  const [resultDialog, setResultDialog] = useState<ResultDialogType>(emptyResultDialog)\n\n  const pushMessageToMessages = (message: MessageType) => {\n    dispatch && dispatch({type: \"addMessage\", payload: message})\n  }\n\n  useEffect(() => {\n    axios.get(\"/covid-exposure/config\")\n      .then(response => {\n        if (response.data) {\n          const config: DashboardState = response.data\n          dispatch && dispatch({\n            type: \"updateConfig\",\n            payload: config\n          })\n        }\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        if (location.state) {\n          const computeOutput: ComputeComponentOutput = location.state\n          updateDks(computeOutput.request.diagnosisKeys)\n          updateRpis(computeOutput.request.rpiDbEntries)\n          updateMatches(computeOutput.response)\n          if (computeOutput.response.size > 0 && dispatch) {\n            pushMessageToMessages({\n              text: `${computeOutput.response.size} encounters found`,\n              date: currentTime(),\n              error: false\n            })\n          } else if (computeOutput.response.size > 0) {\n            pushMessageToMessages({\n              text: \"No encounters found\",\n              date: currentTime(),\n              error: false\n            })\n          }\n          setResultDialog({\n            open: true,\n            content: <div>\n              {computeOutput.response.size > 0 ? (\n                <p><b>Found {computeOutput.response.size} encounters!</b> See plots for more details.</p>\n              ) : (\n                <p>No encounters found.</p>\n              )}\n            </div>\n          })\n        }\n      })\n  }, [])\n\n  const processDksUpload = (data: ArrayBuffer) => {\n    readDkZip(data, false).then(dks => {\n      updateDks(dks)\n      pushMessageToSnackbar({\n        text: `${dks.length} Diagnosis Keys loaded`\n      })\n      pushMessageToMessages({\n        text: `${dks.length} Diagnosis Keys loaded`,\n        date: currentTime(),\n        error: false\n      })\n    })\n      .catch(error => {\n        pushMessageToMessages({\n          text: `Error loading Diagnosis Keys`,\n          date: currentTime(),\n          error: true\n        })\n        pushMessageToSnackbar({\n          text: \"Error parsing Diagnosis Keys: \" + error\n        })\n      })\n  }\n\n  const processRpisUpload = (data: ArrayBuffer) => {\n    try {\n      const readRpis = readRpiProtoDb(data).entry\n      updateRpis(readRpis)\n      pushMessageToSnackbar({\n        text: `${readRpis.length} Bluetooth scans loaded`\n      })\n      pushMessageToMessages({\n        text: `${readRpis.length} Bluetooth scans loaded`,\n        date: currentTime(),\n        error: false\n      })\n    } catch (error) {\n      pushMessageToMessages({\n        text: `Bluetooth scans could not be loaded`,\n        date: currentTime(),\n        error: true\n      })\n      pushMessageToSnackbar({\n        text: \"Error parsing Bluetooth data: \" + error\n      })\n    }\n  }\n\n  const processMatchingConfig = async (cacheLoadedCallback: () => void) => {\n\n    const configToPost: DashboardState = {\n      experimental: false,\n      downloadCountries,\n      messages: [],\n      cachingEnabled,\n      numberWebWorkers\n    }\n\n    if (matchingInputData.rpiDbEntries.length === 0 || matchingInputData.diagnosisKeys.length === 0) {\n      pushMessageToSnackbar && pushMessageToSnackbar({\n        text: \"No Diagnosis Keys or Bluetooth data loaded\"\n      })\n      cacheLoadedCallback()\n      return\n    }\n\n    axios.post(\"/covid-exposure/config\", JSON.stringify(configToPost))\n      .finally(() => {\n        if (cachingEnabled) {\n          axios.get(\"/covid-exposure/checked\", {responseType: \"arraybuffer\"})\n            .then(response => {\n              const pbf = new Pbf(response.data)\n              try {\n                const checkedDKs: CheckedDKsType = CheckedDKs.read(pbf)\n                pushMessageToMessages({\n                  text: `Loaded ${checkedDKs.checkedDKs.length} cached Diagnosis Keys`,\n                  date: currentTime(),\n                  error: false\n                })\n                history.push({\n                  pathname: '/covid-exposure/m/computing',\n                  state: {\n                    ...matchingInputData,\n                    useCaching: cachingEnabled,\n                    checkedDks: new Set<string>(checkedDKs.checkedDKs)\n                  }\n                })\n              } catch (error) {\n                pushMessageToMessages({\n                  text: `Error parsing cached Diagnosis Keys`,\n                  date: currentTime(),\n                  error: true\n                })\n                pushMessageToSnackbar && pushMessageToSnackbar({\n                  text: \"Error parsing cached Diagnosis Keys: \" + error\n                })\n              } finally {\n                cacheLoadedCallback()\n              }\n            })\n            .catch(error => {\n              pushMessageToMessages({\n                text: `Error downloading cached Diagnosis Keys`,\n                date: currentTime(),\n                error: true\n              })\n              pushMessageToSnackbar && pushMessageToSnackbar({\n                text: \"Error downloading cached Diagnosis Keys: \" + error\n              })\n            })\n            .finally(() => cacheLoadedCallback())\n        } else {\n          cacheLoadedCallback()\n          history.push({\n            pathname: '/covid-exposure/m/computing',\n            state: {\n              ...matchingInputData,\n              useCaching: cachingEnabled,\n              checkedDks: new Set<string>()\n            }\n          })\n        }\n      })\n  }\n\n  const statisticsEntryFromMap = (map: Map<number, number>): StatisticsEntry[] => {\n    const newDkStatistic: StatisticsEntry[] = []\n    map.forEach((value, key) => {\n      newDkStatistic.push({\n        timestamp: key,\n        value\n      })\n    })\n    return newDkStatistic.sort((a, b) => a.timestamp - b.timestamp)\n  }\n\n  const updateMatches = (matches: Map<string, Match>) => {\n    const timestampToRssiList: Map<number, number>[] = []\n    matches.forEach(value => {\n      const timestampToRssi = new Map<number, number>()\n      value.rpiDetails.forEach(rpi => {\n        timestampToRssi.set(rpi.timestamp, rpi.rssi)\n      })\n      timestampToRssiList.push(timestampToRssi)\n    })\n    setStatistics(prevState => ({\n      ...prevState,\n      matches: timestampToRssiList.map(result => statisticsEntryFromMap(result))\n    }))\n  }\n\n  const updateRpis = (rpis: RpiDbEntryType[]) => {\n    setMatchingInputData(prevState => ({\n      ...prevState,\n      rpiDbEntries: rpis\n    }))\n    const timestampToCount = new Map<number, number>()\n    rpis.forEach(rpi => {\n      const interval = (rpi.key[0] << 8) | rpi.key[1]\n      const timestamp = interval * 24 * 60 * 60\n      const count = timestampToCount.get(timestamp)\n      timestampToCount.set(timestamp, count ? count + 1 : 1)\n    })\n    setStatistics(prevState => ({\n      ...prevState,\n      rpis: statisticsEntryFromMap(timestampToCount)\n    }))\n  }\n\n  const updateDks = (dks: DiagnosisKey[]) => {\n    setMatchingInputData(prevState => ({\n        ...prevState,\n        diagnosisKeys: dks\n    }))\n    const timestamps = dks.map(dk => dk.rollingStart * 600)\n    const timestampToCount = new Map<number, number>()\n    timestamps.forEach(timestamp => {\n      const count = timestampToCount.get(timestamp)\n      timestampToCount.set(timestamp, count ? count + 1 : 1)\n    })\n    setStatistics(prevState => ({\n      ...prevState,\n      dks: statisticsEntryFromMap(timestampToCount)\n    }))\n  }\n\n  const selectDashboard = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"COVIDexposure - Dashboard\";\n    setSelectedTab(\"Dashboard\");\n    if (!hasFetchedCardChart) {\n      setHasFetchedCardChart(true);\n      import(\"../../shared/components/CardChart\").then((Component) => {\n        setCardChart(Component.default);\n      });\n    }\n  }, [\n    setSelectedTab,\n    setCardChart,\n    hasFetchedCardChart,\n    setHasFetchedCardChart,\n  ]);\n\n  const getPushMessageFromChild = useCallback(\n    (pushMessage) => {\n      setPushMessageToSnackbar(() => pushMessage)\n    },\n    [setPushMessageToSnackbar]\n  );\n\n  return (\n      <Fragment>\n        <Dialog\n          fullScreen={false}\n          open={resultDialog.open}\n          onClose={() => setResultDialog(emptyResultDialog)}\n          aria-labelledby=\"result-dialog\"\n        >\n          <DialogTitle id=\"result-dialog\">Computation summary</DialogTitle>\n          <DialogContent>\n            {resultDialog.content}\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={() => setResultDialog(emptyResultDialog)} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <NavBar\n          selectedTab={selectedTab}\n          messages={messages}\n        />\n\n        <ConsecutiveSnackbarMessages\n          getPushMessageFromChild={getPushMessageFromChild}\n        />\n        <main className={classNames(classes.main)}>\n          <Routing\n            CardChart={CardChart}\n            statistics={statistics}\n            processDksUpload={processDksUpload}\n            processRpisUpload={processRpisUpload}\n            processMatchingConfig={processMatchingConfig}\n            updateDks={updateDks}\n            targets={targets}\n            selectDashboard={selectDashboard}\n            setTargets={setTargets}\n            pushMessageToSnackbar={pushMessageToSnackbar}\n            pushMessageToMessages={pushMessageToMessages}\n          />\n        </main>\n      </Fragment>\n  );\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// @ts-ignore\nexport default withRouter(withStyles(styles, { withTheme: true })(memo(Main)));\n"],"sourceRoot":""}