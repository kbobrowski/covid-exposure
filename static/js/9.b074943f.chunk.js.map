{"version":3,"sources":["shared/components/CardChart.js"],"names":["labelFormatter","label","format","Date","calculateMin","data","yKey","max","Number","POSITIVE_INFINITY","forEach","element","withStyles","theme","cardContentInner","marginTop","spacing","withTheme","props","color","title","classes","valueDescription","height","formatter","useCallback","value","pt","px","pb","variant","className","width","type","dataKey","domain","hide","stroke","strokeDasharray","cursor","contentStyle","border","padding","borderRadius","shape","boxShadow","shadows","labelStyle","typography","body1","itemStyle","fontSize","letterSpacing","fontFamily","lineHeight","fontWeight"],"mappings":"sGAAA,8IA0BA,SAASA,EAAeC,GACtB,OAAOC,YAAO,IAAIC,KAAa,IAARF,GAAe,aAGxC,SAASG,EAAaC,EAAMC,GAC1B,IAAIC,EAAMC,OAAOC,kBAMjB,OALAJ,EAAKK,SAAQ,SAACC,GACRJ,EAAMI,EAAQL,KAChBC,EAAMI,EAAQL,OAGX,EAsEMM,uBAvFA,SAACC,GAAD,MAAY,CACzBC,iBAAkB,CAChBC,UAAWF,EAAMG,SAAS,OAqFI,CAAEC,WAAW,GAAhCL,EAnEf,SAAmBM,GAAQ,IACjBC,EAAiED,EAAjEC,MAAOd,EAA0Da,EAA1Db,KAAMe,EAAoDF,EAApDE,MAAOC,EAA6CH,EAA7CG,QAASC,EAAoCJ,EAApCI,iBAAkBT,EAAkBK,EAAlBL,MAAOU,EAAWL,EAAXK,OAExDC,EAAYC,uBAChB,SAACC,GACC,MAAO,CAACA,EAAOJ,KAEjB,CAACA,IAGH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAAC,IAAD,CAAYC,QAAQ,aAAaV,IAEnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKW,UAAWV,EAAQP,iBAAkBS,OAAQA,GAChD,kBAAC,IAAD,CAAqBS,MAAM,OAAOT,OAAO,QACvC,kBAAC,IAAD,CAAWlB,KAAMA,EAAM4B,KAAK,UAC1B,kBAAC,IAAD,CACEC,QAAQ,YACRD,KAAK,SACLE,OAAQ,CAAC,UAAW,WACpBC,MAAI,IAEN,kBAAC,IAAD,CACED,OAAQ,CAAC/B,EAAaC,EAAM,SAAgB,aAE9C,kBAAC,IAAD,CAAM4B,KAAK,SAASC,QAAQ,QAAQG,OAAQlB,IAC5C,kBAAC,IAAD,CAAemB,gBAAgB,QAC/B,kBAAC,IAAD,CACEtC,eAAgBA,EAChBwB,UAAWA,EACXe,QAAQ,EACRC,aAAc,CACZC,OAAQ,OACRC,QAAS7B,EAAMG,QAAQ,GACvB2B,aAAc9B,EAAM+B,MAAMD,aAC1BE,UAAWhC,EAAMiC,QAAQ,IAE3BC,WAAYlC,EAAMmC,WAAWC,MAC7BC,UAAW,CACTC,SAAUtC,EAAMmC,WAAWC,MAAME,SACjCC,cAAevC,EAAMmC,WAAWC,MAAMG,cACtCC,WAAYxC,EAAMmC,WAAWC,MAAMI,WACnCC,WAAYzC,EAAMmC,WAAWC,MAAMK,WACnCC,WAAY1C,EAAMmC,WAAWC,MAAMM","file":"static/js/9.b074943f.chunk.js","sourcesContent":["import React, {useCallback} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  YAxis,\n} from \"recharts\";\nimport format from \"date-fns/format\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  withStyles,\n  Box,\n} from \"@material-ui/core\";\nimport LineChart from \"recharts/lib/chart/LineChart\";\nimport Line from \"recharts/lib/cartesian/Line\";\nimport CartesianGrid from \"recharts/lib/cartesian/CartesianGrid\";\n\nconst styles = (theme) => ({\n  cardContentInner: {\n    marginTop: theme.spacing(-4),\n  },\n});\n\nfunction labelFormatter(label) {\n  return format(new Date(label * 1000), \"MMMM d, p\");\n}\n\nfunction calculateMin(data, yKey) {\n  let max = Number.POSITIVE_INFINITY;\n  data.forEach((element) => {\n    if (max > element[yKey]) {\n      max = element[yKey];\n    }\n  });\n  return 0;// Math.round(max - max * factor);\n}\n\nfunction CardChart(props) {\n  const { color, data, title, classes, valueDescription, theme, height } = props;\n\n  const formatter = useCallback(\n    (value) => {\n      return [value, valueDescription];\n    },\n    [valueDescription]\n  );\n\n  return (\n    <Card>\n      <Box pt={2} px={2} pb={4}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n      <CardContent>\n        <Box className={classes.cardContentInner} height={height}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={data} type=\"number\">\n              <XAxis\n                dataKey=\"timestamp\"\n                type=\"number\"\n                domain={[\"dataMin\", \"dataMax\"]}\n                hide\n              />\n              <YAxis\n                domain={[calculateMin(data, \"value\", 0.05), \"dataMax\"]}\n              />\n              <Line type=\"linear\" dataKey=\"value\" stroke={color} />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip\n                labelFormatter={labelFormatter}\n                formatter={formatter}\n                cursor={false}\n                contentStyle={{\n                  border: \"none\",\n                  padding: theme.spacing(1),\n                  borderRadius: theme.shape.borderRadius,\n                  boxShadow: theme.shadows[1],\n                }}\n                labelStyle={theme.typography.body1}\n                itemStyle={{\n                  fontSize: theme.typography.body1.fontSize,\n                  letterSpacing: theme.typography.body1.letterSpacing,\n                  fontFamily: theme.typography.body1.fontFamily,\n                  lineHeight: theme.typography.body1.lineHeight,\n                  fontWeight: theme.typography.body1.fontWeight,\n                }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nCardChart.propTypes = {\n  color: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  valueDescription: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  height: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CardChart);\n"],"sourceRoot":""}